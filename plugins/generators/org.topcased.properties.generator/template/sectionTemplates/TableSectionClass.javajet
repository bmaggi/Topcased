<%@ jet
	 package="org.topcased.properties.generator.templates"
	 imports="org.eclipse.emf.codegen.ecore.genmodel.* org.topcased.properties.configurator.* org.eclipse.emf.ecore.EReference"
	 class="ComboSection"
	 version="$Id: TableSectionClass.javajet,v 1.1 2006/10/30 17:10:50 jako Exp $" %>
<%
	AbstractSection aSection = (AbstractSection)argument;
	TabbedView tabbedView = aSection.getTab().getCategory().getParent();
	
	GenFeature feature = null;
	GenPackage gPackage = null;
	
	String thePackage = tabbedView.getProjectName();
	String basePackage = tabbedView.getBasePackage();
    if (basePackage != null && !basePackage.equals(""))
    {
        thePackage = basePackage;
    }
    
	String interfaceName = "";
	String qualifiedInterfaceName = "";
	if (aSection instanceof SingleFeatureSection)
	{
		SingleFeatureSection section = (SingleFeatureSection)aSection;
		feature = section.getFeature();
		gPackage = feature.getGenPackage();
		
		interfaceName = feature.getGenClass().getInterfaceName();
		qualifiedInterfaceName = feature.getGenClass().getQualifiedInterfaceName();
	}
	else
	{
		;//MultipleFeatureSection section = (MultipleFeatureSection)aSection;
	}
	EReference eRef = (EReference) feature.getEcoreFeature();
%>
package <%=thePackage%>.sections;

import java.util.ArrayList;
import java.util.List;

import org.eclipse.emf.ecore.EReference;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.jface.viewers.IBaseLabelProvider;

import <%=qualifiedInterfaceName%>;
import <%=gPackage.getQualifiedPackageInterfaceName()%>;
import <%=gPackage.getQualifiedItemProviderAdapterFactoryClassName()%>;

import org.topcased.tabbedproperties.AbstractTabbedPropertySheetPage;
import org.topcased.tabbedproperties.providers.TabbedPropertiesLabelProvider;
<% if (eRef.isContainment()) 
   { 
       %>import org.topcased.tabbedproperties.sections.AbstractListPropertySection;<%
   } 
   else 
   { 
       %>import org.topcased.tabbedproperties.sections.AbstractReferencePropertySection;<%
   }
%>


/**
 * A section which displays the multi features.<br>
 * The section features a table with two buttons letting the user to<br>
 * add or remove items from the selected object.
 *
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 *
 * @generated
 */
public class <%=aSection.getClassName()%> extends <% if (eRef.isContainment()) { %>AbstractListPropertySection<%} else {%>AbstractReferencePropertySection<%}%>
{
    
	/**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
	 * @see org.topcased.tabbedproperties.sections.AbstractTabbedPropertySection#getLabelText()
     * @generated
	 */
	protected String getLabelText() 
	{
		return "<%=feature.getCapName()%>:";
	}

	/**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
	 * @see org.topcased.tabbedproperties.sections.AbstractTabbedPropertySection#getFeature()
     * @generated
	 */
	protected EStructuralFeature getFeature() 
	{
		return <%=gPackage.getPackageInterfaceName()%>.eINSTANCE.get<%=interfaceName%>_<%=feature.getCapName()%>();
	}

	/**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
	 * @see org.topcased.tabbedproperties.sections.AbstractListPropertySection#getListValues()
     * @generated
	 */
    protected Object getListValues()
    {
        return ((<%=interfaceName%>) getEObject()).<%=feature.getGetAccessor()%>();
    }
    
    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @see org.topcased.tabbedproperties.sections.AbstractListPropertySection#getLabelProvider()
     * @generated
	 */
	 protected IBaseLabelProvider getLabelProvider() {
        if (getFeature() instanceof EReference) {
            List f = new ArrayList();
            f.add(new <%=gPackage.getItemProviderAdapterFactoryClassName()%>());
            f.addAll(AbstractTabbedPropertySheetPage.getPrincipalAdapterFactories());
            return new TabbedPropertiesLabelProvider(new ComposedAdapterFactory(f));
        }
		return null;
	 }
}